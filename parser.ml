type token =
  | SEMI
  | LPAREN
  | RPAREN
  | LBRACE
  | RBRACE
  | COMMA
  | LBRACKET
  | RBRACKET
  | PLBRACKET
  | RLBRACKET
  | LTUPLE
  | RTUPLE
  | OUP
  | ODOWN
  | FLAT
  | OCTOTHORPE
  | RHYTHMDOT
  | DOT
  | PLUS
  | MINUS
  | TIMES
  | DIVIDE
  | ASSIGN
  | NOT
  | FPLUS
  | FMINUS
  | FTIMES
  | FDIVIDE
  | CONCAT
  | EQ
  | NEQ
  | LT
  | LEQ
  | GT
  | GEQ
  | TRUE
  | FALSE
  | AND
  | OR
  | IF
  | THEN
  | ELSE
  | FOR
  | WHILE
  | INT
  | BOOL
  | VOID
  | FUN
  | TYP
  | LITERAL of (int)
  | FLITERAL of (float)
  | ID of (string)
  | FID of (string)
  | EOF

open Parsing;;
let _ = parse_error;;
# 2 "parser.mly"
open Ast
# 62 "parser.ml"
let yytransl_const = [|
  257 (* SEMI *);
  258 (* LPAREN *);
  259 (* RPAREN *);
  260 (* LBRACE *);
  261 (* RBRACE *);
  262 (* COMMA *);
  263 (* LBRACKET *);
  264 (* RBRACKET *);
  265 (* PLBRACKET *);
  266 (* RLBRACKET *);
  267 (* LTUPLE *);
  268 (* RTUPLE *);
  269 (* OUP *);
  270 (* ODOWN *);
  271 (* FLAT *);
  272 (* OCTOTHORPE *);
  273 (* RHYTHMDOT *);
  274 (* DOT *);
  275 (* PLUS *);
  276 (* MINUS *);
  277 (* TIMES *);
  278 (* DIVIDE *);
  279 (* ASSIGN *);
  280 (* NOT *);
  281 (* FPLUS *);
  282 (* FMINUS *);
  283 (* FTIMES *);
  284 (* FDIVIDE *);
  285 (* CONCAT *);
  286 (* EQ *);
  287 (* NEQ *);
  288 (* LT *);
  289 (* LEQ *);
  290 (* GT *);
  291 (* GEQ *);
  292 (* TRUE *);
  293 (* FALSE *);
  294 (* AND *);
  295 (* OR *);
  296 (* IF *);
  297 (* THEN *);
  298 (* ELSE *);
  299 (* FOR *);
  300 (* WHILE *);
  301 (* INT *);
  302 (* BOOL *);
  303 (* VOID *);
  304 (* FUN *);
  305 (* TYP *);
    0 (* EOF *);
    0|]

let yytransl_block = [|
  306 (* LITERAL *);
  307 (* FLITERAL *);
  308 (* ID *);
  309 (* FID *);
    0|]

let yylhs = "\255\255\
\001\000\002\000\002\000\002\000\003\000\003\000\003\000\005\000\
\006\000\009\000\009\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\008\000\008\000\010\000\010\000\007\000\
\007\000\000\000"

let yylen = "\002\000\
\002\000\000\000\001\000\003\000\001\000\001\000\001\000\004\000\
\006\000\000\000\001\000\001\000\001\000\001\000\001\000\001\000\
\003\000\003\000\003\000\003\000\004\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\002\000\002\000\002\000\
\002\000\002\000\002\000\002\000\002\000\003\000\002\000\003\000\
\006\000\003\000\003\000\001\000\002\000\001\000\003\000\001\000\
\002\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\014\000\015\000\000\000\000\000\
\012\000\013\000\000\000\000\000\058\000\000\000\000\000\000\000\
\006\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\
\043\000\042\000\041\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\020\000\048\000\000\000\017\000\
\018\000\019\000\000\000\000\000\050\000\000\000\000\000\057\000\
\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\021\000\000\000\
\000\000\000\000\009\000"

let yydgoto = "\002\000\
\021\000\022\000\023\000\029\000\025\000\026\000\044\000\045\000\
\000\000\000\000"

let yysindex = "\003\000\
\078\255\000\000\198\255\198\255\198\255\198\255\198\255\198\255\
\198\255\198\255\198\255\198\255\000\000\000\000\198\255\206\254\
\000\000\000\000\241\254\055\006\000\000\009\000\009\255\193\006\
\000\000\000\000\198\255\106\006\193\006\130\255\138\255\190\255\
\251\005\021\255\021\255\023\255\023\255\023\255\164\006\244\254\
\228\254\198\255\241\254\233\254\198\255\000\000\078\255\237\254\
\000\000\000\000\000\000\198\255\198\255\198\255\198\255\198\255\
\198\255\198\255\198\255\198\255\198\255\198\255\198\255\198\255\
\198\255\198\255\198\255\198\255\000\000\000\000\193\006\000\000\
\000\000\000\000\198\255\028\255\000\000\193\006\198\255\000\000\
\000\000\025\255\252\005\252\005\010\255\010\255\252\005\252\005\
\010\255\010\255\023\255\024\007\024\007\047\007\047\007\047\007\
\047\007\251\006\222\006\135\006\198\255\193\006\000\000\198\255\
\047\006\193\006\000\000"

let yyrindex = "\000\000\
\041\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\001\000\000\000\000\000\000\000\042\000\006\000\
\000\000\000\000\000\000\000\000\253\004\000\000\000\000\000\000\
\000\000\011\001\064\001\054\000\107\000\160\000\000\000\000\000\
\000\000\000\000\074\002\000\000\210\005\000\000\041\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\051\005\000\000\
\000\000\000\000\000\000\000\000\000\000\104\005\000\000\000\000\
\000\000\000\000\127\002\180\002\117\001\170\001\233\002\031\003\
\223\001\021\002\213\000\084\003\137\003\190\003\243\003\041\004\
\094\004\147\004\200\004\000\000\000\000\018\000\000\000\000\000\
\000\000\157\005\000\000"

let yygindex = "\000\000\
\000\000\252\255\000\000\004\000\000\000\000\000\000\000\016\000\
\000\000\000\000"

let yytablesize = 2124
let yytable = "\079\000\
\016\000\040\000\041\000\001\000\024\000\005\000\028\000\042\000\
\046\000\047\000\076\000\034\000\035\000\036\000\037\000\038\000\
\048\000\008\000\039\000\030\000\031\000\032\000\033\000\077\000\
\049\000\050\000\051\000\048\000\080\000\048\000\082\000\101\000\
\103\000\071\000\071\000\071\000\071\000\051\000\060\000\051\000\
\002\000\003\000\081\000\000\000\000\000\078\000\000\000\000\000\
\071\000\060\000\024\000\000\000\000\000\038\000\000\000\083\000\
\084\000\085\000\086\000\087\000\088\000\089\000\090\000\091\000\
\092\000\093\000\094\000\095\000\096\000\097\000\098\000\099\000\
\000\000\000\000\000\000\000\000\000\000\000\000\100\000\003\000\
\000\000\004\000\102\000\000\000\005\000\000\000\006\000\000\000\
\007\000\000\000\008\000\009\000\000\000\000\000\000\000\000\000\
\000\000\010\000\000\000\000\000\000\000\011\000\000\000\012\000\
\000\000\000\000\040\000\106\000\071\000\000\000\000\000\000\000\
\000\000\013\000\014\000\000\000\105\000\015\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\016\000\017\000\
\018\000\019\000\020\000\003\000\000\000\004\000\070\000\000\000\
\005\000\000\000\006\000\003\000\007\000\004\000\008\000\009\000\
\005\000\072\000\006\000\000\000\007\000\010\000\008\000\009\000\
\000\000\011\000\000\000\012\000\000\000\010\000\000\000\039\000\
\000\000\011\000\000\000\012\000\000\000\013\000\014\000\000\000\
\000\000\015\000\000\000\000\000\000\000\013\000\014\000\000\000\
\000\000\015\000\000\000\017\000\018\000\019\000\027\000\000\000\
\000\000\000\000\000\000\017\000\018\000\019\000\027\000\003\000\
\000\000\004\000\000\000\000\000\005\000\073\000\006\000\003\000\
\007\000\004\000\008\000\009\000\005\000\000\000\006\000\000\000\
\007\000\010\000\008\000\009\000\051\000\011\000\000\000\012\000\
\000\000\010\000\000\000\000\000\000\000\011\000\000\000\012\000\
\000\000\013\000\014\000\000\000\000\000\015\000\000\000\000\000\
\000\000\013\000\014\000\000\000\000\000\015\000\000\000\017\000\
\018\000\019\000\027\000\000\000\000\000\000\000\000\000\017\000\
\018\000\019\000\027\000\000\000\000\000\000\000\000\000\000\000\
\000\000\016\000\016\000\016\000\016\000\016\000\005\000\016\000\
\016\000\016\000\044\000\016\000\016\000\016\000\016\000\016\000\
\016\000\016\000\008\000\016\000\016\000\016\000\016\000\000\000\
\016\000\016\000\016\000\016\000\016\000\016\000\016\000\016\000\
\016\000\016\000\016\000\016\000\016\000\016\000\016\000\016\000\
\016\000\016\000\016\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\016\000\016\000\016\000\016\000\038\000\038\000\
\038\000\038\000\038\000\000\000\000\000\038\000\038\000\045\000\
\038\000\038\000\038\000\038\000\038\000\038\000\000\000\000\000\
\038\000\038\000\038\000\038\000\000\000\038\000\038\000\038\000\
\038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
\038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\038\000\
\038\000\038\000\038\000\040\000\040\000\040\000\040\000\040\000\
\000\000\000\000\040\000\040\000\024\000\040\000\040\000\040\000\
\040\000\040\000\040\000\000\000\000\000\040\000\040\000\040\000\
\040\000\000\000\040\000\040\000\040\000\040\000\040\000\040\000\
\040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
\040\000\040\000\040\000\040\000\040\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\040\000\040\000\040\000\040\000\
\039\000\039\000\039\000\039\000\039\000\000\000\000\000\039\000\
\039\000\025\000\039\000\039\000\039\000\039\000\039\000\039\000\
\000\000\000\000\039\000\039\000\039\000\039\000\000\000\039\000\
\039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
\039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
\039\000\039\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\039\000\039\000\039\000\039\000\051\000\051\000\051\000\
\051\000\051\000\000\000\000\000\051\000\051\000\028\000\051\000\
\051\000\051\000\051\000\051\000\051\000\000\000\000\000\051\000\
\051\000\051\000\051\000\000\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\051\000\051\000\
\051\000\051\000\000\000\044\000\044\000\044\000\044\000\044\000\
\000\000\000\000\044\000\044\000\029\000\044\000\044\000\044\000\
\044\000\044\000\044\000\000\000\000\000\044\000\044\000\044\000\
\044\000\000\000\044\000\044\000\044\000\044\000\044\000\000\000\
\044\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
\044\000\044\000\044\000\044\000\044\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\044\000\044\000\044\000\044\000\
\045\000\045\000\045\000\045\000\045\000\000\000\000\000\045\000\
\045\000\016\000\045\000\045\000\045\000\045\000\045\000\045\000\
\000\000\000\000\045\000\045\000\045\000\045\000\000\000\045\000\
\045\000\045\000\045\000\045\000\000\000\045\000\045\000\045\000\
\045\000\045\000\045\000\045\000\045\000\045\000\045\000\045\000\
\045\000\045\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\045\000\045\000\045\000\045\000\024\000\024\000\024\000\
\024\000\024\000\000\000\000\000\024\000\024\000\022\000\024\000\
\024\000\024\000\024\000\000\000\000\000\000\000\000\000\024\000\
\024\000\024\000\024\000\000\000\024\000\024\000\024\000\024\000\
\024\000\000\000\024\000\024\000\024\000\024\000\024\000\024\000\
\024\000\024\000\024\000\024\000\024\000\024\000\024\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\024\000\024\000\
\024\000\024\000\025\000\025\000\025\000\025\000\025\000\000\000\
\000\000\025\000\025\000\023\000\025\000\025\000\025\000\025\000\
\000\000\000\000\000\000\000\000\025\000\025\000\025\000\025\000\
\000\000\025\000\025\000\025\000\025\000\025\000\000\000\025\000\
\025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
\025\000\025\000\025\000\025\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\025\000\025\000\025\000\025\000\028\000\
\028\000\028\000\028\000\028\000\000\000\000\000\028\000\028\000\
\026\000\028\000\028\000\028\000\028\000\000\000\000\000\000\000\
\000\000\028\000\028\000\028\000\028\000\000\000\028\000\028\000\
\028\000\028\000\028\000\000\000\028\000\028\000\028\000\028\000\
\028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
\028\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\028\000\028\000\028\000\028\000\000\000\029\000\029\000\029\000\
\029\000\029\000\000\000\000\000\029\000\029\000\027\000\029\000\
\029\000\029\000\029\000\000\000\000\000\000\000\000\000\029\000\
\029\000\029\000\029\000\000\000\029\000\029\000\029\000\029\000\
\029\000\000\000\029\000\029\000\029\000\029\000\029\000\029\000\
\029\000\029\000\029\000\029\000\029\000\029\000\029\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\029\000\029\000\
\029\000\029\000\016\000\016\000\000\000\016\000\000\000\000\000\
\016\000\000\000\016\000\030\000\016\000\000\000\016\000\016\000\
\016\000\016\000\016\000\000\000\016\000\016\000\016\000\016\000\
\000\000\016\000\016\000\016\000\016\000\016\000\016\000\016\000\
\016\000\016\000\016\000\016\000\016\000\016\000\016\000\016\000\
\016\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\016\000\016\000\016\000\016\000\022\000\
\022\000\022\000\022\000\022\000\000\000\000\000\022\000\022\000\
\031\000\022\000\022\000\022\000\022\000\000\000\000\000\000\000\
\000\000\022\000\022\000\000\000\000\000\000\000\022\000\022\000\
\022\000\000\000\000\000\000\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\022\000\022\000\022\000\022\000\023\000\023\000\023\000\023\000\
\023\000\000\000\000\000\023\000\023\000\032\000\023\000\023\000\
\023\000\023\000\000\000\000\000\000\000\000\000\023\000\023\000\
\000\000\000\000\000\000\023\000\023\000\023\000\000\000\000\000\
\000\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
\023\000\023\000\023\000\023\000\023\000\023\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\023\000\023\000\023\000\
\023\000\026\000\026\000\026\000\026\000\026\000\000\000\000\000\
\026\000\026\000\033\000\026\000\026\000\026\000\026\000\000\000\
\000\000\000\000\000\000\026\000\026\000\000\000\000\000\000\000\
\026\000\026\000\026\000\000\000\000\000\000\000\026\000\026\000\
\026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
\026\000\026\000\026\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\026\000\026\000\026\000\026\000\000\000\027\000\
\027\000\027\000\027\000\027\000\000\000\000\000\027\000\027\000\
\034\000\027\000\027\000\027\000\027\000\000\000\000\000\000\000\
\000\000\027\000\027\000\000\000\000\000\000\000\027\000\027\000\
\027\000\000\000\000\000\000\000\027\000\027\000\027\000\027\000\
\027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
\027\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\027\000\027\000\027\000\027\000\030\000\030\000\030\000\030\000\
\030\000\000\000\000\000\030\000\030\000\035\000\030\000\030\000\
\030\000\030\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\030\000\000\000\000\000\000\000\000\000\
\000\000\030\000\030\000\000\000\000\000\000\000\000\000\030\000\
\030\000\030\000\030\000\030\000\030\000\030\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\030\000\030\000\030\000\
\030\000\031\000\031\000\031\000\031\000\031\000\000\000\000\000\
\031\000\031\000\036\000\031\000\031\000\031\000\031\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\031\000\000\000\000\000\000\000\000\000\000\000\031\000\031\000\
\000\000\000\000\000\000\000\000\031\000\031\000\031\000\031\000\
\031\000\031\000\031\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\031\000\031\000\031\000\031\000\032\000\032\000\
\032\000\032\000\032\000\000\000\000\000\032\000\032\000\037\000\
\032\000\032\000\032\000\032\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\032\000\000\000\000\000\
\000\000\000\000\000\000\032\000\032\000\000\000\000\000\000\000\
\000\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\000\
\032\000\032\000\032\000\033\000\033\000\033\000\033\000\033\000\
\000\000\000\000\033\000\033\000\052\000\033\000\033\000\033\000\
\033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\033\000\000\000\000\000\000\000\000\000\000\000\
\033\000\033\000\000\000\000\000\000\000\000\000\033\000\033\000\
\033\000\033\000\033\000\033\000\033\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\033\000\033\000\033\000\033\000\
\000\000\034\000\034\000\034\000\034\000\034\000\000\000\000\000\
\034\000\034\000\053\000\034\000\034\000\034\000\034\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\034\000\000\000\000\000\000\000\000\000\000\000\034\000\034\000\
\000\000\000\000\000\000\000\000\034\000\034\000\034\000\034\000\
\034\000\034\000\034\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\034\000\034\000\034\000\034\000\035\000\035\000\
\035\000\035\000\035\000\000\000\000\000\035\000\035\000\046\000\
\035\000\035\000\035\000\035\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\035\000\000\000\000\000\
\000\000\000\000\000\000\035\000\035\000\000\000\000\000\000\000\
\000\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\000\
\035\000\035\000\035\000\036\000\036\000\036\000\036\000\036\000\
\000\000\000\000\036\000\036\000\049\000\036\000\036\000\036\000\
\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\036\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\036\000\036\000\
\036\000\036\000\036\000\036\000\036\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\036\000\036\000\036\000\036\000\
\037\000\037\000\037\000\037\000\037\000\000\000\000\000\037\000\
\037\000\047\000\037\000\037\000\037\000\037\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\037\000\037\000\000\000\037\000\037\000\
\037\000\037\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\037\000\037\000\037\000\037\000\052\000\052\000\052\000\
\052\000\052\000\000\000\000\000\052\000\052\000\000\000\052\000\
\052\000\052\000\052\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\052\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\052\000\052\000\000\000\000\000\052\000\052\000\052\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\052\000\052\000\
\052\000\052\000\000\000\053\000\053\000\053\000\053\000\053\000\
\000\000\000\000\053\000\053\000\000\000\053\000\053\000\053\000\
\053\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\053\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\053\000\053\000\
\000\000\000\000\053\000\053\000\053\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\053\000\053\000\053\000\053\000\
\046\000\046\000\046\000\046\000\046\000\000\000\000\000\046\000\
\046\000\000\000\046\000\046\000\046\000\046\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\046\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\046\000\046\000\000\000\000\000\046\000\
\046\000\046\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\046\000\046\000\046\000\046\000\049\000\049\000\049\000\
\049\000\049\000\000\000\000\000\049\000\049\000\000\000\049\000\
\049\000\049\000\049\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\049\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\049\000\049\000\000\000\000\000\049\000\049\000\049\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\049\000\049\000\
\049\000\049\000\047\000\000\000\047\000\000\000\047\000\000\000\
\000\000\047\000\000\000\000\000\000\000\047\000\000\000\000\000\
\047\000\047\000\047\000\000\000\047\000\000\000\047\000\047\000\
\000\000\000\000\047\000\000\000\047\000\047\000\047\000\047\000\
\047\000\047\000\047\000\047\000\047\000\000\000\000\000\047\000\
\047\000\000\000\047\000\047\000\003\000\000\000\004\000\000\000\
\000\000\005\000\048\000\006\000\000\000\007\000\074\000\008\000\
\009\000\000\000\049\000\050\000\051\000\000\000\010\000\000\000\
\054\000\055\000\011\000\000\000\012\000\000\000\058\000\059\000\
\060\000\000\000\000\000\000\000\000\000\000\000\013\000\014\000\
\000\000\000\000\015\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\017\000\018\000\019\000\027\000\
\003\000\000\000\004\000\107\000\000\000\005\000\000\000\006\000\
\003\000\007\000\004\000\008\000\009\000\005\000\000\000\006\000\
\000\000\007\000\010\000\008\000\009\000\000\000\011\000\000\000\
\012\000\000\000\010\000\000\000\000\000\000\000\011\000\000\000\
\012\000\000\000\013\000\014\000\000\000\000\000\015\000\000\000\
\000\000\000\000\013\000\014\000\000\000\000\000\015\000\000\000\
\017\000\018\000\019\000\027\000\000\000\000\000\000\000\000\000\
\017\000\018\000\043\000\027\000\069\000\000\000\000\000\000\000\
\048\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\049\000\050\000\051\000\000\000\052\000\053\000\054\000\055\000\
\000\000\000\000\056\000\057\000\058\000\059\000\060\000\061\000\
\062\000\063\000\064\000\065\000\066\000\048\000\000\000\067\000\
\068\000\000\000\000\000\000\000\000\000\049\000\050\000\051\000\
\000\000\052\000\053\000\054\000\055\000\000\000\000\000\056\000\
\057\000\058\000\059\000\060\000\061\000\062\000\063\000\064\000\
\065\000\066\000\048\000\000\000\067\000\068\000\000\000\000\000\
\104\000\000\000\049\000\050\000\051\000\000\000\052\000\053\000\
\054\000\055\000\000\000\000\000\056\000\057\000\058\000\059\000\
\060\000\061\000\062\000\063\000\064\000\065\000\066\000\048\000\
\000\000\067\000\068\000\000\000\075\000\000\000\000\000\049\000\
\050\000\051\000\000\000\052\000\053\000\054\000\055\000\000\000\
\000\000\056\000\057\000\058\000\059\000\060\000\061\000\062\000\
\063\000\064\000\065\000\066\000\048\000\000\000\067\000\068\000\
\000\000\000\000\000\000\000\000\049\000\050\000\051\000\000\000\
\052\000\053\000\054\000\055\000\000\000\000\000\056\000\057\000\
\058\000\059\000\060\000\061\000\062\000\063\000\064\000\065\000\
\066\000\048\000\000\000\067\000\000\000\000\000\000\000\000\000\
\000\000\049\000\050\000\051\000\000\000\052\000\053\000\054\000\
\055\000\000\000\000\000\056\000\057\000\058\000\059\000\060\000\
\061\000\062\000\063\000\064\000\065\000\066\000\048\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\049\000\050\000\
\051\000\000\000\052\000\053\000\054\000\055\000\000\000\000\000\
\056\000\057\000\058\000\059\000\060\000\048\000\000\000\063\000\
\064\000\065\000\066\000\000\000\000\000\049\000\050\000\051\000\
\000\000\052\000\053\000\054\000\055\000\000\000\000\000\056\000\
\057\000\058\000\059\000\060\000"

let yycheck = "\023\001\
\000\000\052\001\018\001\001\000\001\000\000\000\003\000\023\001\
\000\000\001\001\023\001\008\000\009\000\010\000\011\000\012\000\
\007\001\000\000\015\000\004\000\005\000\006\000\007\000\052\001\
\015\001\016\001\017\001\007\001\052\001\007\001\050\001\004\001\
\008\001\030\000\031\000\032\000\033\000\017\001\029\001\017\001\
\000\000\000\000\047\000\255\255\255\255\042\000\255\255\255\255\
\045\000\029\001\047\000\255\255\255\255\000\000\255\255\052\000\
\053\000\054\000\055\000\056\000\057\000\058\000\059\000\060\000\
\061\000\062\000\063\000\064\000\065\000\066\000\067\000\068\000\
\255\255\255\255\255\255\255\255\255\255\255\255\075\000\002\001\
\255\255\004\001\079\000\255\255\007\001\255\255\009\001\255\255\
\011\001\255\255\013\001\014\001\255\255\255\255\255\255\255\255\
\255\255\020\001\255\255\255\255\255\255\024\001\255\255\026\001\
\255\255\255\255\000\000\104\000\105\000\255\255\255\255\255\255\
\255\255\036\001\037\001\255\255\101\000\040\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\049\001\050\001\
\051\001\052\001\053\001\002\001\255\255\004\001\005\001\255\255\
\007\001\255\255\009\001\002\001\011\001\004\001\013\001\014\001\
\007\001\008\001\009\001\255\255\011\001\020\001\013\001\014\001\
\255\255\024\001\255\255\026\001\255\255\020\001\255\255\000\000\
\255\255\024\001\255\255\026\001\255\255\036\001\037\001\255\255\
\255\255\040\001\255\255\255\255\255\255\036\001\037\001\255\255\
\255\255\040\001\255\255\050\001\051\001\052\001\053\001\255\255\
\255\255\255\255\255\255\050\001\051\001\052\001\053\001\002\001\
\255\255\004\001\255\255\255\255\007\001\008\001\009\001\002\001\
\011\001\004\001\013\001\014\001\007\001\255\255\009\001\255\255\
\011\001\020\001\013\001\014\001\000\000\024\001\255\255\026\001\
\255\255\020\001\255\255\255\255\255\255\024\001\255\255\026\001\
\255\255\036\001\037\001\255\255\255\255\040\001\255\255\255\255\
\255\255\036\001\037\001\255\255\255\255\040\001\255\255\050\001\
\051\001\052\001\053\001\255\255\255\255\255\255\255\255\050\001\
\051\001\052\001\053\001\255\255\255\255\255\255\255\255\255\255\
\255\255\001\001\002\001\003\001\004\001\005\001\001\001\007\001\
\008\001\009\001\000\000\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\001\001\019\001\020\001\021\001\022\001\255\255\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\050\001\051\001\052\001\053\001\001\001\002\001\
\003\001\004\001\005\001\255\255\255\255\008\001\009\001\000\000\
\011\001\012\001\013\001\014\001\015\001\016\001\255\255\255\255\
\019\001\020\001\021\001\022\001\255\255\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\040\001\041\001\042\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\050\001\
\051\001\052\001\053\001\001\001\002\001\003\001\004\001\005\001\
\255\255\255\255\008\001\009\001\000\000\011\001\012\001\013\001\
\014\001\015\001\016\001\255\255\255\255\019\001\020\001\021\001\
\022\001\255\255\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\050\001\051\001\052\001\053\001\
\001\001\002\001\003\001\004\001\005\001\255\255\255\255\008\001\
\009\001\000\000\011\001\012\001\013\001\014\001\015\001\016\001\
\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\037\001\038\001\039\001\040\001\
\041\001\042\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\050\001\051\001\052\001\053\001\001\001\002\001\003\001\
\004\001\005\001\255\255\255\255\008\001\009\001\000\000\011\001\
\012\001\013\001\014\001\015\001\016\001\255\255\255\255\019\001\
\020\001\021\001\022\001\255\255\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\050\001\051\001\
\052\001\053\001\255\255\001\001\002\001\003\001\004\001\005\001\
\255\255\255\255\008\001\009\001\000\000\011\001\012\001\013\001\
\014\001\015\001\016\001\255\255\255\255\019\001\020\001\021\001\
\022\001\255\255\024\001\025\001\026\001\027\001\028\001\255\255\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\050\001\051\001\052\001\053\001\
\001\001\002\001\003\001\004\001\005\001\255\255\255\255\008\001\
\009\001\000\000\011\001\012\001\013\001\014\001\015\001\016\001\
\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\
\025\001\026\001\027\001\028\001\255\255\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\037\001\038\001\039\001\040\001\
\041\001\042\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\050\001\051\001\052\001\053\001\001\001\002\001\003\001\
\004\001\005\001\255\255\255\255\008\001\009\001\000\000\011\001\
\012\001\013\001\014\001\255\255\255\255\255\255\255\255\019\001\
\020\001\021\001\022\001\255\255\024\001\025\001\026\001\027\001\
\028\001\255\255\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\050\001\051\001\
\052\001\053\001\001\001\002\001\003\001\004\001\005\001\255\255\
\255\255\008\001\009\001\000\000\011\001\012\001\013\001\014\001\
\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\
\255\255\024\001\025\001\026\001\027\001\028\001\255\255\030\001\
\031\001\032\001\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\041\001\042\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\050\001\051\001\052\001\053\001\001\001\
\002\001\003\001\004\001\005\001\255\255\255\255\008\001\009\001\
\000\000\011\001\012\001\013\001\014\001\255\255\255\255\255\255\
\255\255\019\001\020\001\021\001\022\001\255\255\024\001\025\001\
\026\001\027\001\028\001\255\255\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\050\001\051\001\052\001\053\001\255\255\001\001\002\001\003\001\
\004\001\005\001\255\255\255\255\008\001\009\001\000\000\011\001\
\012\001\013\001\014\001\255\255\255\255\255\255\255\255\019\001\
\020\001\021\001\022\001\255\255\024\001\025\001\026\001\027\001\
\028\001\255\255\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\050\001\051\001\
\052\001\053\001\001\001\002\001\255\255\004\001\255\255\255\255\
\007\001\255\255\009\001\000\000\011\001\255\255\013\001\014\001\
\015\001\016\001\017\001\255\255\019\001\020\001\021\001\022\001\
\255\255\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\050\001\051\001\052\001\053\001\001\001\
\002\001\003\001\004\001\005\001\255\255\255\255\008\001\009\001\
\000\000\011\001\012\001\013\001\014\001\255\255\255\255\255\255\
\255\255\019\001\020\001\255\255\255\255\255\255\024\001\025\001\
\026\001\255\255\255\255\255\255\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\050\001\051\001\052\001\053\001\001\001\002\001\003\001\004\001\
\005\001\255\255\255\255\008\001\009\001\000\000\011\001\012\001\
\013\001\014\001\255\255\255\255\255\255\255\255\019\001\020\001\
\255\255\255\255\255\255\024\001\025\001\026\001\255\255\255\255\
\255\255\030\001\031\001\032\001\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\042\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\050\001\051\001\052\001\
\053\001\001\001\002\001\003\001\004\001\005\001\255\255\255\255\
\008\001\009\001\000\000\011\001\012\001\013\001\014\001\255\255\
\255\255\255\255\255\255\019\001\020\001\255\255\255\255\255\255\
\024\001\025\001\026\001\255\255\255\255\255\255\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\050\001\051\001\052\001\053\001\255\255\001\001\
\002\001\003\001\004\001\005\001\255\255\255\255\008\001\009\001\
\000\000\011\001\012\001\013\001\014\001\255\255\255\255\255\255\
\255\255\019\001\020\001\255\255\255\255\255\255\024\001\025\001\
\026\001\255\255\255\255\255\255\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\050\001\051\001\052\001\053\001\001\001\002\001\003\001\004\001\
\005\001\255\255\255\255\008\001\009\001\000\000\011\001\012\001\
\013\001\014\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\024\001\255\255\255\255\255\255\255\255\
\255\255\030\001\031\001\255\255\255\255\255\255\255\255\036\001\
\037\001\038\001\039\001\040\001\041\001\042\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\050\001\051\001\052\001\
\053\001\001\001\002\001\003\001\004\001\005\001\255\255\255\255\
\008\001\009\001\000\000\011\001\012\001\013\001\014\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\024\001\255\255\255\255\255\255\255\255\255\255\030\001\031\001\
\255\255\255\255\255\255\255\255\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\050\001\051\001\052\001\053\001\001\001\002\001\
\003\001\004\001\005\001\255\255\255\255\008\001\009\001\000\000\
\011\001\012\001\013\001\014\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\024\001\255\255\255\255\
\255\255\255\255\255\255\030\001\031\001\255\255\255\255\255\255\
\255\255\036\001\037\001\038\001\039\001\040\001\041\001\042\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\050\001\
\051\001\052\001\053\001\001\001\002\001\003\001\004\001\005\001\
\255\255\255\255\008\001\009\001\000\000\011\001\012\001\013\001\
\014\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\024\001\255\255\255\255\255\255\255\255\255\255\
\030\001\031\001\255\255\255\255\255\255\255\255\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\050\001\051\001\052\001\053\001\
\255\255\001\001\002\001\003\001\004\001\005\001\255\255\255\255\
\008\001\009\001\000\000\011\001\012\001\013\001\014\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\024\001\255\255\255\255\255\255\255\255\255\255\030\001\031\001\
\255\255\255\255\255\255\255\255\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\050\001\051\001\052\001\053\001\001\001\002\001\
\003\001\004\001\005\001\255\255\255\255\008\001\009\001\000\000\
\011\001\012\001\013\001\014\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\024\001\255\255\255\255\
\255\255\255\255\255\255\030\001\031\001\255\255\255\255\255\255\
\255\255\036\001\037\001\038\001\039\001\040\001\041\001\042\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\050\001\
\051\001\052\001\053\001\001\001\002\001\003\001\004\001\005\001\
\255\255\255\255\008\001\009\001\000\000\011\001\012\001\013\001\
\014\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\024\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\050\001\051\001\052\001\053\001\
\001\001\002\001\003\001\004\001\005\001\255\255\255\255\008\001\
\009\001\000\000\011\001\012\001\013\001\014\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\024\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\036\001\037\001\255\255\039\001\040\001\
\041\001\042\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\050\001\051\001\052\001\053\001\001\001\002\001\003\001\
\004\001\005\001\255\255\255\255\008\001\009\001\255\255\011\001\
\012\001\013\001\014\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\024\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\036\001\037\001\255\255\255\255\040\001\041\001\042\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\050\001\051\001\
\052\001\053\001\255\255\001\001\002\001\003\001\004\001\005\001\
\255\255\255\255\008\001\009\001\255\255\011\001\012\001\013\001\
\014\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\024\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\036\001\037\001\
\255\255\255\255\040\001\041\001\042\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\050\001\051\001\052\001\053\001\
\001\001\002\001\003\001\004\001\005\001\255\255\255\255\008\001\
\009\001\255\255\011\001\012\001\013\001\014\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\024\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\036\001\037\001\255\255\255\255\040\001\
\041\001\042\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\050\001\051\001\052\001\053\001\001\001\002\001\003\001\
\004\001\005\001\255\255\255\255\008\001\009\001\255\255\011\001\
\012\001\013\001\014\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\024\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\036\001\037\001\255\255\255\255\040\001\041\001\042\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\050\001\051\001\
\052\001\053\001\001\001\255\255\003\001\255\255\005\001\255\255\
\255\255\008\001\255\255\255\255\255\255\012\001\255\255\255\255\
\015\001\016\001\017\001\255\255\019\001\255\255\021\001\022\001\
\255\255\255\255\025\001\255\255\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\034\001\035\001\255\255\255\255\038\001\
\039\001\255\255\041\001\042\001\002\001\255\255\004\001\255\255\
\255\255\007\001\007\001\009\001\255\255\011\001\012\001\013\001\
\014\001\255\255\015\001\016\001\017\001\255\255\020\001\255\255\
\021\001\022\001\024\001\255\255\026\001\255\255\027\001\028\001\
\029\001\255\255\255\255\255\255\255\255\255\255\036\001\037\001\
\255\255\255\255\040\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\050\001\051\001\052\001\053\001\
\002\001\255\255\004\001\005\001\255\255\007\001\255\255\009\001\
\002\001\011\001\004\001\013\001\014\001\007\001\255\255\009\001\
\255\255\011\001\020\001\013\001\014\001\255\255\024\001\255\255\
\026\001\255\255\020\001\255\255\255\255\255\255\024\001\255\255\
\026\001\255\255\036\001\037\001\255\255\255\255\040\001\255\255\
\255\255\255\255\036\001\037\001\255\255\255\255\040\001\255\255\
\050\001\051\001\052\001\053\001\255\255\255\255\255\255\255\255\
\050\001\051\001\052\001\053\001\003\001\255\255\255\255\255\255\
\007\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\015\001\016\001\017\001\255\255\019\001\020\001\021\001\022\001\
\255\255\255\255\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\034\001\035\001\007\001\255\255\038\001\
\039\001\255\255\255\255\255\255\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001\021\001\022\001\255\255\255\255\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\007\001\255\255\038\001\039\001\255\255\255\255\
\042\001\255\255\015\001\016\001\017\001\255\255\019\001\020\001\
\021\001\022\001\255\255\255\255\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\035\001\007\001\
\255\255\038\001\039\001\255\255\041\001\255\255\255\255\015\001\
\016\001\017\001\255\255\019\001\020\001\021\001\022\001\255\255\
\255\255\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\007\001\255\255\038\001\039\001\
\255\255\255\255\255\255\255\255\015\001\016\001\017\001\255\255\
\019\001\020\001\021\001\022\001\255\255\255\255\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\033\001\034\001\
\035\001\007\001\255\255\038\001\255\255\255\255\255\255\255\255\
\255\255\015\001\016\001\017\001\255\255\019\001\020\001\021\001\
\022\001\255\255\255\255\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\007\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\015\001\016\001\
\017\001\255\255\019\001\020\001\021\001\022\001\255\255\255\255\
\025\001\026\001\027\001\028\001\029\001\007\001\255\255\032\001\
\033\001\034\001\035\001\255\255\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001\021\001\022\001\255\255\255\255\025\001\
\026\001\027\001\028\001\029\001"

let yynames_const = "\
  SEMI\000\
  LPAREN\000\
  RPAREN\000\
  LBRACE\000\
  RBRACE\000\
  COMMA\000\
  LBRACKET\000\
  RBRACKET\000\
  PLBRACKET\000\
  RLBRACKET\000\
  LTUPLE\000\
  RTUPLE\000\
  OUP\000\
  ODOWN\000\
  FLAT\000\
  OCTOTHORPE\000\
  RHYTHMDOT\000\
  DOT\000\
  PLUS\000\
  MINUS\000\
  TIMES\000\
  DIVIDE\000\
  ASSIGN\000\
  NOT\000\
  FPLUS\000\
  FMINUS\000\
  FTIMES\000\
  FDIVIDE\000\
  CONCAT\000\
  EQ\000\
  NEQ\000\
  LT\000\
  LEQ\000\
  GT\000\
  GEQ\000\
  TRUE\000\
  FALSE\000\
  AND\000\
  OR\000\
  IF\000\
  THEN\000\
  ELSE\000\
  FOR\000\
  WHILE\000\
  INT\000\
  BOOL\000\
  VOID\000\
  FUN\000\
  TYP\000\
  EOF\000\
  "

let yynames_block = "\
  LITERAL\000\
  FLITERAL\000\
  ID\000\
  FID\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'decls) in
    Obj.repr(
# 35 "parser.mly"
            ( List.rev _1 )
# 803 "parser.ml"
               : Ast.program))
; (fun __caml_parser_env ->
    Obj.repr(
# 40 "parser.mly"
                  ( [] )
# 809 "parser.ml"
               : 'decls))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'section) in
    Obj.repr(
# 41 "parser.mly"
                  ( _1 )
# 816 "parser.ml"
               : 'decls))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'section) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'decls) in
    Obj.repr(
# 42 "parser.mly"
                       ( _1 :: _3 )
# 824 "parser.ml"
               : 'decls))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 48 "parser.mly"
           ( _1 )
# 831 "parser.ml"
               : 'section))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'fdecl) in
    Obj.repr(
# 49 "parser.mly"
           ( _1 )
# 838 "parser.ml"
               : 'section))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'tdecl) in
    Obj.repr(
# 50 "parser.mly"
          ( _1 )
# 845 "parser.ml"
               : 'section))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'formals_list) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 58 "parser.mly"
     ( { ident = _1;
	       formals = List.rev(_2);
	       body = _4 } )
# 856 "parser.ml"
               : 'fdecl))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 63 "parser.mly"
                                         ( Typedef(_2, List.rev _5) )
# 864 "parser.ml"
               : 'tdecl))
; (fun __caml_parser_env ->
    Obj.repr(
# 67 "parser.mly"
                  ( Noexpr )
# 870 "parser.ml"
               : 'expr_opt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 68 "parser.mly"
                  ( _1 )
# 877 "parser.ml"
               : 'expr_opt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 71 "parser.mly"
                     ( Literal(_1) )
# 884 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : float) in
    Obj.repr(
# 72 "parser.mly"
                     ( FLiteral(_1) )
# 891 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 73 "parser.mly"
                     ( BoolLit(true) )
# 897 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 74 "parser.mly"
                     ( BoolLit(false) )
# 903 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 75 "parser.mly"
                     ( Id(_1) )
# 910 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 78 "parser.mly"
                                ( List(_2) )
# 917 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 79 "parser.mly"
                                 ( PList(_2) )
# 924 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 80 "parser.mly"
                                ( Tuple(_2) )
# 931 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 81 "parser.mly"
                       ( _2 )
# 938 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 82 "parser.mly"
                                   ( Sub(_1, _3) )
# 946 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 85 "parser.mly"
                     ( Binop(_1, Add,   _3) )
# 954 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 86 "parser.mly"
                     ( Binop(_1, Sub,   _3) )
# 962 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 87 "parser.mly"
                     ( Binop(_1, Mult,  _3) )
# 970 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 88 "parser.mly"
                     ( Binop(_1, Div,   _3) )
# 978 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 89 "parser.mly"
                      ( Binop(_1, FAdd,   _3) )
# 986 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 90 "parser.mly"
                      ( Binop(_1, FSub,   _3) )
# 994 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 91 "parser.mly"
                      ( Binop(_1, FMult,  _3) )
# 1002 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 92 "parser.mly"
                      ( Binop(_1, FDiv,   _3) )
# 1010 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 93 "parser.mly"
                     ( Binop(_1, Equal, _3) )
# 1018 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 94 "parser.mly"
                     ( Binop(_1, Neq,   _3) )
# 1026 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 95 "parser.mly"
                     ( Binop(_1, Less,  _3) )
# 1034 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 96 "parser.mly"
                     ( Binop(_1, Leq,   _3) )
# 1042 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 97 "parser.mly"
                     ( Binop(_1, Greater, _3) )
# 1050 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 98 "parser.mly"
                     ( Binop(_1, Geq,   _3) )
# 1058 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 99 "parser.mly"
                     ( Binop(_1, And,   _3) )
# 1066 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 100 "parser.mly"
                     ( Binop(_1, Or,    _3) )
# 1074 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 103 "parser.mly"
                         ( Preop(Neg, _2) )
# 1081 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 104 "parser.mly"
                          ( Preop(FNeg, _2) )
# 1088 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 105 "parser.mly"
                     ( Preop(Not, _2) )
# 1095 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 108 "parser.mly"
                     ( Postop(_1, Rhythmdot) )
# 1102 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 109 "parser.mly"
                     ( Postop(_1, Hashtag) )
# 1109 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 110 "parser.mly"
                     ( Postop(_1, Flat) )
# 1116 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 111 "parser.mly"
                     ( Preop (OctaveUp, _2) )
# 1123 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 112 "parser.mly"
                     ( Preop (OctaveDown, _2) )
# 1130 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 115 "parser.mly"
                     ( Assign(_1, _3) )
# 1138 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr_list) in
    Obj.repr(
# 116 "parser.mly"
                  ( Call(_1, _2) )
# 1146 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 117 "parser.mly"
                             ( List.rev _2 )
# 1153 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 118 "parser.mly"
                                ( If(_2, _4, _6) )
# 1162 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 119 "parser.mly"
                ( Get(_1, _3) )
# 1170 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 120 "parser.mly"
                      ( Concat(_1, _3) )
# 1178 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 124 "parser.mly"
            ( _1 )
# 1185 "parser.ml"
               : 'expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 125 "parser.mly"
                   (_2 :: _1)
# 1193 "parser.ml"
               : 'expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 129 "parser.mly"
            ( _1 )
# 1200 "parser.ml"
               : 'func_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'func_list) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 130 "parser.mly"
                        (_3 :: _1)
# 1208 "parser.ml"
               : 'func_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 133 "parser.mly"
                          ( [_1] )
# 1215 "parser.ml"
               : 'formals_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'formals_list) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 134 "parser.mly"
                          ( _2 :: _1 )
# 1223 "parser.ml"
               : 'formals_list))
(* Entry program *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let program (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Ast.program)
